#
# librefmem
#

import sys

Import('env')

prefix = env['PREFIX']

name = 'refmem'
major = 0
minor = 1
branch = 0

src = [ 'alloc.c', 'debug.c' ]

linkflags = env.soname(name, major, minor)

static = env.StaticLibrary(name, src,
                           LINKFLAGS = linkflags,
                           CPPPATH = [ '../include', '.' ])
shared = env.SharedLibrary(name, src,
                           SHLIBSUFFIX = env.shlibsuffix(major, minor, branch),
                           LINKFLAGS = linkflags,
                           CPPPATH = [ '../include', '.' ])

link0 = env.Symlink('lib%s%s' % (name, env.shlibsuffix(major, minor)), shared)
link1 = env.Symlink('lib%s%s' % (name, env.shlibsuffix(major)), shared)
link2 = env.Symlink('lib%s%s' % (name, env.shlibsuffix()), shared)

targets = [ static, shared, link0, link1, link2 ]

env.Install(prefix + '/lib', static)

lib0 = env.Install(prefix + '/lib', shared)
lib1 = env.Symlink('%s/lib/lib%s%s' % (prefix, name,
                                       env.shlibsuffix(major, minor)), lib0)
lib2 = env.Symlink('%s/lib/lib%s%s' % (prefix, name,
                                       env.shlibsuffix(major)), lib1)
lib3 = env.Symlink('%s/lib/lib%s%s' % (prefix, name,
                                       env.shlibsuffix()), lib2)

Return('targets')

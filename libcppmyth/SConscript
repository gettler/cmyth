#!/usr/bin/python
#
# libcppmyth
#

import sys

Import('env')

src = [ 'connection.cpp', 'proginfo.cpp', 'proglist.cpp', 'refmem.cpp',
        'file.cpp', 'exception.cpp' ]

major = '0'
minor = '1'
version = major + '.' + minor
soname = 'libcppmyth.so.' + version
soname2 = 'libcppmyth.so.' + major
soname3 = 'libcppmyth.so'

if sys.platform == 'darwin':
    linkflags = [ ]
else:
    linkflags = [ '-Wl,-soname,' + soname ]

static = env.StaticLibrary('cppmyth', src,
                           LINKFLAGS = linkflags,
                           LIBS = [ 'cmyth', 'refmem' ],
                           CPPPATH = [ '../include', '.' ],
                           LIBPATH = [ '../libcmyth', '../librefmem' ])
shared = env.SharedLibrary('cppmyth', src,
                           SHLIBSUFFIX = '.so.' + version,
                           LINKFLAGS = linkflags,
                           LIBS = [ 'cmyth', 'refmem' ],
                           CPPPATH = [ '../include', '.' ],
                           LIBPATH = [ '../libcmyth', '../librefmem' ])

link2 = env.Command(soname2, shared,
                   'ln -sf %s %s' % (soname, soname2), chdir=1)
link3 = env.Command(soname3, soname2,
                   'ln -sf %s %s' % (soname2, soname3), chdir=1)

if sys.platform == 'darwin':
    targets = [ static ]
else:
    targets = [ static, shared, link2, link3 ]

prefix = env['PREFIX']
install = env.Install(prefix + '/lib', targets)
symlink2 = env.Command(prefix + '/lib/' + soname2, link2,
                       'ln -sf %s %s' % (soname, prefix + '/lib/' + soname2))
symlink3 = env.Command(prefix + '/lib/' + soname3, link3,
                       'ln -sf %s %s' % (soname2, prefix + '/lib/' + soname3))

Return('targets')
